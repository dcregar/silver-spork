{
	"info": {
		"name": "InventoryConfigService",
		"_postman_id": "1e337bb0-8ab3-b83a-627c-b745c1fda536",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "createOrUpdateNodeType",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"nodeTypeId\" : \"GSI_WHSE\",\r\n    \"description\" : \"Description for node type 1\"\r\n}"
				},
				"url": {
					"raw": "{{url_inventory_config_service}}/nodeTypes/GSI_WHSE",
					"host": [
						"{{url_inventory_config_service}}"
					],
					"path": [
						"nodeTypes",
						"GSI_WHSE"
					]
				},
				"description": "Creates or updates (if nodeTypeId doesn't exist) node type."
			},
			"response": []
		},
		{
			"name": "createOrUpdateInventoryOrg",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "    {\n      \"inventoryOrganizationId\": \"TMSNA_INV_ORG\",\n      \"inventoryOrganizationName\": \"TMSNA Inventory Organization\",\n      \"defaultNodeGroupId\": \"nodeGroup1\",\n      \"defaultShippingCalendarId\": \"shippingCalendar1\",\n      \"defaultProductClassId\": \"GOOD\",\n      \"defaultUnitOfMeasureId\": \"EACH\",\n      \"nodeRejectedSupplyAction\": \"NO_HOLD\",\n      \"isActiveForAvailability\": true\n    }"
				},
				"url": {
					"raw": "{{vip_inventory_config_service}}/inventoryOrganizations/TMSNA_INV_ORG",
					"host": [
						"{{vip_inventory_config_service}}"
					],
					"path": [
						"inventoryOrganizations",
						"TMSNA_INV_ORG"
					]
				},
				"description": "creates or updates and existing inventory org"
			},
			"response": []
		},
		{
			"name": "createOrUpdateProductClass",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"productClassId\" : \"GOOD\",\r\n    \"description\" : \"GOOD\"\r\n}"
				},
				"url": {
					"raw": "{{url_inventory_config_service}}/productClasses/GOOD",
					"host": [
						"{{url_inventory_config_service}}"
					],
					"path": [
						"productClasses",
						"GOOD"
					]
				},
				"description": "creates new product class or updates if already existing"
			},
			"response": []
		},
		{
			"name": "createOrUpdateNode",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"inventoryOrganizationId\" : \"TMSNA_INV_ORG\",\r\n    \"nodeId\" : \"GSI-DC227\",\r\n    \"nodeTypeId\" : \"DC\",\r\n    \"description\" : \"GSI Richwood DLx\",\r\n    \"nodePriority\" : 1,\r\n    \"address\" : {\r\n        \"line1\" : \"40 Logistics Blvd\",\r\n        \"city\" : \"Walton\",\r\n        \"mainDivision\" : \"KY\",\r\n        \"postalCode\" : \"41094\",\r\n        \"countryCode\" : \"US\"\r\n    },\r\n    \"latitude\" : 38.9021286,\r\n    \"longitude\" : -84.631767,\r\n    \"localeCode\" : \"en_US\",\r\n    \"timeZoneId\" : \"US/Eastern\",\r\n    \"eligibleFulfillmentTypeIds\" : [\r\n        \"SHIP_TO_HOME\",\r\n        \"SHIP_TO_STORE\"\r\n    ],\r\n    \"nodeRejectedSupplyAction\" : \"NO_HOLD\",\r\n    \"receiptProcessingDays\" : 1,\r\n    \"minShipmentProcessingDays\" : 2,\r\n    \"maxShipmentProcessingDays\" : 3,\r\n    \"isInfinite\" : false,\r\n    \"isActiveForAvailability\" : true,\r\n    \"isShipNode\" : true,\r\n    \"isGiftWrapAllowed\" : true,\r\n    \"isAssociateDeliveryEligible\" : false\r\n}"
				},
				"url": {
					"raw": "{{url_inventory_config_service}}/inventoryOrganizations/TMSNA_INV_ORG/nodes/GSI-DC227",
					"host": [
						"{{url_inventory_config_service}}"
					],
					"path": [
						"inventoryOrganizations",
						"TMSNA_INV_ORG",
						"nodes",
						"GSI-DC227"
					]
				},
				"description": "creates new node or updates existing"
			},
			"response": []
		},
		{
			"name": "createOrUpdateUnitOfMeasure",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"unitOfMeasureId\" : \"RITEACH\",\r\n    \"unitOfMeasureType\" : \"QUANTITY\",\r\n    \"description\" : \"Test\"\r\n}"
				},
				"url": {
					"raw": "{{url_inventory_config_service}}/unitOfMeasures/RITEACH",
					"host": [
						"{{url_inventory_config_service}}"
					],
					"path": [
						"unitOfMeasures",
						"RITEACH"
					]
				},
				"description": "creates new unit of measure or unpdates existing"
			},
			"response": []
		},
		{
			"name": "createOrUpdateNodeGroup",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "    {\n      \"inventoryOrganizationId\": \"TMSNA_INV_ORG\",\n      \"nodeGroupId\": \"nodeGroup1\",\n      \"description\": \"description1\",\n      \"nodes\": [\n        {\n          \"nodeId\": \"node1\",\n          \"priority\": 1,\n          \"startDate\": \"2017-01-01\",\n          \"endDate\": \"2020-01-01\",\n          \"isActive\": true\n        },\n        {\n          \"nodeId\": \"node2\",\n          \"priority\": 5,\n          \"startDate\": \"2017-01-01\",\n          \"endDate\": \"2020-01-01\",\n          \"isActive\": true\n        },\n        {\n          \"nodeId\": \"TMS_NA-DC003\",\n          \"priority\": 9,\n          \"startDate\": \"2017-01-01\",\n          \"endDate\": \"2020-01-01\",\n          \"isActive\": true\n        }\n      ]\n    }\n  ]\n}"
				},
				"url": {
					"raw": "{{url_inventory_config_service}}/inventoryOrganizations/TMSNA_INV_ORG/nodeGroups/nodeGroup1",
					"host": [
						"{{url_inventory_config_service}}"
					],
					"path": [
						"inventoryOrganizations",
						"TMSNA_INV_ORG",
						"nodeGroups",
						"nodeGroup1"
					]
				},
				"description": "creates new node group or updates if existing"
			},
			"response": []
		},
		{
			"name": "createOrUpdateStore",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n      \"storeId\": \"TMSUS\",\r\n      \"storeName\": \"The Model Store - US\",\r\n      \"clientId\": \"TMSNA\",\r\n      \"inventoryOrganizationId\": \"TMSNA_INV_ORG\",\r\n      \"defaultFulfillmentTypeId\": \"SHIP_TO_HOME\",\r\n      \"defaultLatestShipDateDays\": 60\r\n}"
				},
				"url": {
					"raw": "{{url_inventory_config_service}}/stores/TMSUS",
					"host": [
						"{{url_inventory_config_service}}"
					],
					"path": [
						"stores",
						"TMSUS"
					]
				},
				"description": "Creates new store or updates existing"
			},
			"response": []
		},
		{
			"name": "searchNodesByNodeGroup",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"nodeGroupId\" : \"RIT_NODE_GRP\",\r\n    \"nodeTypeIds\" : [\r\n        \"RIT_WHSE\",\r\n        \"RETAIL_STORE\"\r\n    ],\r\n    \"nodeIds\" : [\r\n        \"RIT_Node\",\r\n        \"RIT_Node2\",\r\n        \"RIT_Node3\"\r\n    ]\r\n}"
				},
				"url": {
					"raw": "{{url_inventory_config_service}}/inventoryOrganizations/RIT_INV_ORG/nodeGroups/RIT_NODE_GRP/nodes",
					"host": [
						"{{url_inventory_config_service}}"
					],
					"path": [
						"inventoryOrganizations",
						"RIT_INV_ORG",
						"nodeGroups",
						"RIT_NODE_GRP",
						"nodes"
					]
				},
				"description": "find nodes within a node group"
			},
			"response": []
		},
		{
			"name": "searchNodesByInventoryOrg",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"inventoryOrganizationId\" : \"{{inv_org}}\"\r\n}"
				},
				"url": {
					"raw": "{{url_inventory_config_service}}/inventoryOrganizations/{{inv_org}}/node/search",
					"host": [
						"{{url_inventory_config_service}}"
					],
					"path": [
						"inventoryOrganizations",
						"{{inv_org}}",
						"node",
						"search"
					]
				},
				"description": "find nodes within inventory org"
			},
			"response": []
		},
		{
			"name": "XML searchNodesByNodeGroup",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/xml"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "<NodeGroupNodeQuery>\r\n   <NodeGroupId>RIT_NODE_GRP</NodeGroupId>\r\n   <NodeTypeIds>\r\n      <NodeTypeId/>\r\n   </NodeTypeIds>\r\n   <NodeIds>\r\n      <NodeId/>\r\n   </NodeIds>\r\n</NodeGroupNodeQuery>"
				},
				"url": {
					"raw": "{{url_inventory_config_service}}/inventoryOrganizations/RIT_INV_ORG/nodeGroups/RIT_NODE_GRP/nodes",
					"host": [
						"{{url_inventory_config_service}}"
					],
					"path": [
						"inventoryOrganizations",
						"RIT_INV_ORG",
						"nodeGroups",
						"RIT_NODE_GRP",
						"nodes"
					]
				},
				"description": "searches nodes by node group using XML formatted request"
			},
			"response": []
		},
		{
			"name": "getInventoryOrganization",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {},
				"url": {
					"raw": "{{url_inventory_config_service}}/inventoryOrganizations/RIT_INV_ORG",
					"host": [
						"{{url_inventory_config_service}}"
					],
					"path": [
						"inventoryOrganizations",
						"RIT_INV_ORG"
					]
				},
				"description": "returns matching inventory org"
			},
			"response": []
		},
		{
			"name": "getInventoryOrganizations",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {},
				"url": {
					"raw": "{{url_inventory_config_service}}/inventoryOrganizations",
					"host": [
						"{{url_inventory_config_service}}"
					],
					"path": [
						"inventoryOrganizations"
					]
				},
				"description": "returns all inventory orgs"
			},
			"response": []
		},
		{
			"name": "getNode",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {},
				"url": {
					"raw": "{{url_inventory_config_service}}/inventoryOrganizations/TMSNA_INV_ORG/nodes/NodeInt007",
					"host": [
						"{{url_inventory_config_service}}"
					],
					"path": [
						"inventoryOrganizations",
						"TMSNA_INV_ORG",
						"nodes",
						"NodeInt007"
					]
				},
				"description": "get node by inventory org and node id"
			},
			"response": []
		},
		{
			"name": "getNodeGroup",
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "{{url_inventory_config_service}}/inventoryOrganizations/TMSNA_INV_ORG/nodeGroups/NodeGroupInt02",
					"host": [
						"{{url_inventory_config_service}}"
					],
					"path": [
						"inventoryOrganizations",
						"TMSNA_INV_ORG",
						"nodeGroups",
						"NodeGroupInt02"
					]
				},
				"description": "get node group by inventory org and node group id"
			},
			"response": []
		},
		{
			"name": "getNodeGroups",
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "{{url_inventory_config_service}}/inventoryOrganizations/TMSNA_INV_ORG/nodeGroups",
					"host": [
						"{{url_inventory_config_service}}"
					],
					"path": [
						"inventoryOrganizations",
						"TMSNA_INV_ORG",
						"nodeGroups"
					]
				},
				"description": "get all node groups for an inventory org"
			},
			"response": []
		},
		{
			"name": "getNodeTypes",
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "{{url_inventory_config_service}}/nodeTypes",
					"host": [
						"{{url_inventory_config_service}}"
					],
					"path": [
						"nodeTypes"
					]
				},
				"description": "Gets all node types."
			},
			"response": []
		},
		{
			"name": "getStores",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {},
				"url": {
					"raw": "{{url_inventory_config_service}}/stores",
					"host": [
						"{{url_inventory_config_service}}"
					],
					"path": [
						"stores"
					]
				},
				"description": "get all stores"
			},
			"response": []
		},
		{
			"name": "getStore",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {},
				"url": {
					"raw": "{{url_inventory_config_service}}/stores/RITUS",
					"host": [
						"{{url_inventory_config_service}}"
					],
					"path": [
						"stores",
						"RITUS"
					]
				},
				"description": "get a store by storeId"
			},
			"response": []
		},
		{
			"name": "getProductClasses",
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "{{url_inventory_config_service}}/productClasses",
					"host": [
						"{{url_inventory_config_service}}"
					],
					"path": [
						"productClasses"
					]
				},
				"description": "gets all product classes"
			},
			"response": []
		},
		{
			"name": "getUnitOfMeasures",
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "{{url_inventory_config_service}}/unitOfMeasures",
					"host": [
						"{{url_inventory_config_service}}"
					],
					"path": [
						"unitOfMeasures"
					]
				},
				"description": "gets all unit of measure"
			},
			"response": []
		},
		{
			"name": "getCalendars",
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "{{url_inventory_config_service}}/inventoryOrganizations/TMSNA_INV_ORG/calendars",
					"host": [
						"{{url_inventory_config_service}}"
					],
					"path": [
						"inventoryOrganizations",
						"TMSNA_INV_ORG",
						"calendars"
					]
				},
				"description": "get all calendars for an inventory org"
			},
			"response": []
		},
		{
			"name": "getCalendar",
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "{{url_inventory_config_service}}/inventoryOrganizations/TMSNA_INV_ORG/calendars/shippingCalendarIntegration01?fromDate=2017-01-01&toDate=2017-12-31",
					"host": [
						"{{url_inventory_config_service}}"
					],
					"path": [
						"inventoryOrganizations",
						"TMSNA_INV_ORG",
						"calendars",
						"shippingCalendarIntegration01"
					],
					"query": [
						{
							"key": "fromDate",
							"value": "2017-01-01"
						},
						{
							"key": "toDate",
							"value": "2017-12-31"
						}
					]
				},
				"description": "Gets a calendars details within specified date range"
			},
			"response": []
		},
		{
			"name": "getZoneIds",
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "{{url_inventory_config_service}}/timeZoneIds",
					"host": [
						"{{url_inventory_config_service}}"
					],
					"path": [
						"timeZoneIds"
					]
				},
				"description": "returns all zone id's"
			},
			"response": []
		},
		{
			"name": "getFulfillmentTypes",
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "{{url_inventory_config_service}}/fulfillmentTypes",
					"host": [
						"{{url_inventory_config_service}}"
					],
					"path": [
						"fulfillmentTypes"
					]
				},
				"description": "gets all fulfillment types"
			},
			"response": []
		},
		{
			"name": "deleteNodeType",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {},
				"url": {
					"raw": "{{url_inventory_config_service}}/nodeTypes/RIT_WHSE",
					"host": [
						"{{url_inventory_config_service}}"
					],
					"path": [
						"nodeTypes",
						"RIT_WHSE"
					]
				},
				"description": "Deletes unused nodeType by ID"
			},
			"response": []
		},
		{
			"name": "deleteInventoryOrganization",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {},
				"url": {
					"raw": "{{url_inventory_config_service}}/inventoryOrganizations/RIT_INV_ORG",
					"host": [
						"{{url_inventory_config_service}}"
					],
					"path": [
						"inventoryOrganizations",
						"RIT_INV_ORG"
					]
				},
				"description": "deletes the specified inventory organization if not in use"
			},
			"response": []
		},
		{
			"name": "deleteNode",
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {},
				"url": {
					"raw": "{{url_inventory_config_service}}/inventoryOrganizations/TMSNA_INV_ORG/nodes/NodeInt001",
					"host": [
						"{{url_inventory_config_service}}"
					],
					"path": [
						"inventoryOrganizations",
						"TMSNA_INV_ORG",
						"nodes",
						"NodeInt001"
					]
				},
				"description": "deletes the specified node"
			},
			"response": []
		},
		{
			"name": "deleteNodeGroup",
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {},
				"url": {
					"raw": "{{url_inventory_config_service}}/inventoryOrganizations/RIT_INV_ORG/nodeGroups/RIT_NODE_GROUP",
					"host": [
						"{{url_inventory_config_service}}"
					],
					"path": [
						"inventoryOrganizations",
						"RIT_INV_ORG",
						"nodeGroups",
						"RIT_NODE_GROUP"
					]
				},
				"description": "deletes a node group or groups"
			},
			"response": []
		},
		{
			"name": "deleteStore",
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {},
				"url": {
					"raw": "{{url_inventory_config_service}}/stores/RITUS",
					"host": [
						"{{url_inventory_config_service}}"
					],
					"path": [
						"stores",
						"RITUS"
					]
				},
				"description": "deletes the specified store if it's unused"
			},
			"response": []
		},
		{
			"name": "deleteProductClass",
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {},
				"url": {
					"raw": "{{url_inventory_config_service}}/productClasses/RITGOOD",
					"host": [
						"{{url_inventory_config_service}}"
					],
					"path": [
						"productClasses",
						"RITGOOD"
					]
				},
				"description": "deletes specified product class"
			},
			"response": []
		},
		{
			"name": "deleteUnitOfMeasure",
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {},
				"url": {
					"raw": "{{url_inventory_config_service}}/unitOfMeasures/RITEACH",
					"host": [
						"{{url_inventory_config_service}}"
					],
					"path": [
						"unitOfMeasures",
						"RITEACH"
					]
				},
				"description": "deletes specified unit of measure"
			},
			"response": []
		},
		{
			"name": "deleteCalendar",
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {},
				"url": {
					"raw": "{{url_inventory_config_service}}/inventoryOrganizations/TMSNA_INV_ORG/calendars/shippingCalendarInt01",
					"host": [
						"{{url_inventory_config_service}}"
					],
					"path": [
						"inventoryOrganizations",
						"TMSNA_INV_ORG",
						"calendars",
						"shippingCalendarInt01"
					]
				},
				"description": "deletes specified calendar if it's not being used"
			},
			"response": []
		}
	]
}